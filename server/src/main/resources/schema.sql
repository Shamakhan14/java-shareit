CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    email VARCHAR(254) NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(250) NOT NULL,
    requestor BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT PK_REQUEST PRIMARY KEY (id),
    CONSTRAINT FK_REQUESTS_TO_USERS FOREIGN KEY (requestor) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name VARCHAR(50) NOT NULL,
    description VARCHAR(250) NOT NULL,
    available BOOLEAN NOT NULL,
    item_owner BIGINT NOT NULL,
    request BIGINT,
    CONSTRAINT PK_ITEM PRIMARY KEY (id),
    CONSTRAINT FK_ITEMS_TO_USERS_1 FOREIGN KEY (item_owner) REFERENCES users(id),
    CONSTRAINT FK_ITEMS_TO_USERS_2 FOREIGN KEY (request) REFERENCES requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    res_start TIMESTAMP NOT NULL,
    res_end TIMESTAMP NOT NULL,
    item BIGINT NOT NULL,
    booker BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL,
    CONSTRAINT PK_BOOKING PRIMARY KEY (id),
    CONSTRAINT FK_BOOKINGS_TO_ITEMS FOREIGN KEY (item) REFERENCES items(id),
    CONSTRAINT FK_BOOKINGS_TO_USERS FOREIGN KEY (booker) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_text VARCHAR(250) NOT NULL,
    item BIGINT NOT NULL,
    author BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT PK_COMMENT PRIMARY KEY (id),
    CONSTRAINT FK_COMMENTS_TO_ITEMS FOREIGN KEY (item) REFERENCES items(id),
    CONSTRAINT FK_COMMENTS_TO_USERS FOREIGN KEY (author) REFERENCES users(id)
);